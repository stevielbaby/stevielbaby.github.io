{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{authService}from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);useEffect(()=>{const fetchUser=async()=>{const user=await authService.getCurrentUser();setUser(user);};fetchUser();},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,setUser},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","authService","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","fetchUser","getCurrentUser","Provider","value"],"sources":["/Users/steviel/stevielbaby.github.io/my-react-app/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const user = await authService.getCurrentUser();\n      setUser(user);\n    };\n\n    fetchUser();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,OAASC,WAAW,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,MAAO,MAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,KAAM,CAAAF,IAAI,CAAG,KAAM,CAAAP,WAAW,CAACU,cAAc,CAAC,CAAC,CAC/CF,OAAO,CAACD,IAAI,CAAC,CACf,CAAC,CAEDE,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEP,IAAA,CAACC,WAAW,CAACQ,QAAQ,EAACC,KAAK,CAAE,CAAEL,IAAI,CAAEC,OAAQ,CAAE,CAAAF,QAAA,CAC5CA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}